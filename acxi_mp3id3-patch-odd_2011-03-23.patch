--- acxi_orig.pl	2011-03-22 18:10:17.283754602 +0100
+++ acxi_new_odd.pl	2011-03-23 01:59:39.197274988 +0100
@@ -14,6 +14,10 @@
 # Copyright (c) 2007 - Evan Boggs - etboggs@indiana.edu
 # home page: http://www.buberel.org/linux/batch-flac-to-ogg-converter.php
 #
+# Modified: 2011-03-23 01:57:34 - Odd Eivind Ebbesen - www.oddware.net - <oddebb at gmail dot com>
+#           - Added functionality for conversion to MP3, preserving tags.
+#
+#
 # Licensed under the GNU GPL.
 #
 # Given a source directory tree of original data files (flac, wav, etc), 
@@ -68,6 +72,8 @@
 $COMMAND_OGG = '/usr/bin/oggenc';
 $COMMAND_FLAC = '/usr/bin/flac'; 
 $COMMAND_LAME = '/usr/bin/lame';
+# Added: Odd @2011-03-23 01:56:56
+$COMMAND_METAFLAC = '/usr/bin/metaflac';
 
 ## Assign music source/destination directory paths
 ## $DIR_PREFIX_SOURCE is the original, working, like flac, wav, etc
@@ -225,8 +231,9 @@
 }
 
 sub validate_application_paths {
-	my $bMissingApp; $errorMessage; $appPath; 
+	my $bMissingApp; $errorMessage; $appPath, $bMetaflac; 
 	$bMissingApp = '';
+        $bMetaflac = 1;
 	print "Checking audio conversion tool path...";
 	
 	if ( $OUTPUT_TYPE eq 'ogg' ) {
@@ -249,6 +256,11 @@
 			$bMissingApp = 'true';
 			$errorMessage = "$errorMessage\n\tInput processor $appPath needed by lame not available.\n";
 		}
+                # Added: Odd @2011-03-23 01:55:28
+                if ( ! -x "$COMMAND_METAFLAC" ) {
+                    $bMetaflac = 0;
+                    $errorMessage .= "\n\t$COMMAND_METAFLAC not found. ID3 tags will not be copied.\n";
+                }
 	}
 	elsif ( $OUTPUT_TYPE eq 'mp3' && $INPUT_TYPE ne 'flac' ) {
 		$appPath = $COMMAND_LAME;
@@ -263,6 +275,11 @@
 	else {
 		print "\t\tavailable: $appPath\n";
 	}
+
+        # Added: Odd @2011-03-23 01:56:21
+        if ( ! $bMetaflac ) {
+            print "\nWarning: $errorMessage\n";
+        }
 }
 
 sub validate_quality{
@@ -374,7 +391,9 @@
 					$result = `$COMMAND_OGG -q $QUALITY -o "$outFile" "$inFile"`;
 				}
 				elsif ( $OUTPUT_TYPE eq 'mp3' ){
-					$result = `$COMMAND_FLAC -d -o - "$inFile" | $COMMAND_LAME -V $QUALITY -h - "$outFile"`;
+                                    # Modified: Odd @2011-03-23 01:51:26 - Include ID3 copying
+                                    $cmd = &flac2mp3_cmd($COMMAND_FLAC, "$inFile", $COMMAND_LAME, $QUALITY, "$outFile");
+                                    $result = `$cmd`;
 				}
 			} 
 			else {
@@ -422,6 +441,31 @@
 	exit 0;
 }
 
+# Added: Odd @2011-03-23 01:52:17
+sub get_flac_tags {
+    # For this function to work reliably, it should be passed tag queries in the order of:
+    # artist, album, title, genre, date, tracknumber
+    my ($ifile, @tags) = @_;
+    my @origtags;
+    @origtags = `$COMMAND_METAFLAC \"$ifile\" --show-tag=\"$tags[0]\" --show-tag=\"$tags[1]\" --show-tag=\"$tags[2]\" --show-tag=\"$tags[3]\" --show-tag=\"$tags[4]\" --show-tag=\"$tags[5]\"`;
+    foreach (@origtags) {
+        $_ =~ s/.*=//g;
+    }
+    return @origtags;
+}
+
+# Added: Odd @2011-03-23 01:52:31
+sub flac2mp3_cmd {
+    my ($flac, $ifile, $lame, $qual, $ofile) = @_;
+    my $lame_params;
+    my $cmd;
+    my @tags = &get_flac_tags("$ifile", "ARTIST", "ALBUM", "TITLE", "GENRE", "DATE", "TRACKNUMBER");
+    chomp(@tags);
+    $lame_params = "--ta \"$tags[0]\" --tl \"$tags[1]\" --tt \"$tags[2]\" --tg \"$tags[3]\" --ty \"$tags[4]\" --tn \"$tags[5]\" - \"$ofile\"";
+    $cmd = "$flac -s -d -c \"$ifile\" | $lame -h -V $qual $lame_params";
+    return $cmd;
+}
+
 ### SCRIPT EXECUTION ###
 # get defaults from user config files if present
 &set_config_data;
